##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##

// This file automatically generated by:
//   $version
//   $now
// This file is automatically created and should not be edited!

#ifndef $helper.getStubName($intf, $suffix).toUpperCase()_H
#define $helper.getStubName($intf, $suffix).toUpperCase()_H

\#include "etch_stub.h"

#ifdef __cplusplus
extern "C" {
#endif

extern unsigned short CLASSID_$helper.getStubName($intf, $suffix).toUpperCase();
#if($helper.isServer($mc))
void $helper.getIntfName($intf)_server_set_stub_helpers();
#else
void $helper.getIntfName($intf)_client_set_stub_helpers();
#end

/**
 * $helper.getStubName($intf, $suffix)
 */
typedef struct $helper.getStubName($intf, $suffix)
{
    etch_object object;

    etch_stub* stub_base;
    
#if( $helper.getDirectionName($mc).equals("client"))    
    int  server_id;            
#end    
#if(! $helper.getDirectionName($mc).equals("client"))
    int  session_id;           /* client session to which stub belongs */
#end    
    int (*destroyex) (void*);  /* user memory destructor */

    /* - - - - - - - - - - - - - - - - -
     * service-specific allocations
     * - - - - - - - - - - - - - - - - -
     */
    // add here

} $helper.getStubName($intf, $suffix);

#if($helper.isServer($mc))
$helper.getStubName($intf, $suffix)* new_$helper.getStubName($intf, $suffix) (etch_server_factory*, etch_session*);
#else
$helper.getStubName($intf, $suffix)* new_$helper.getStubName($intf, $suffix) (etch_client_factory*);
#end
int is_$helper.getStubName($intf, $suffix)(void* obj);
int destroy_$helper.getStubName($intf, $suffix) (void*);

#ifdef __cplusplus
} //extern "C"
#endif

#endif /* PERF_SERVER_STUB_H */

