##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##

// This file automatically generated by:
//   Apache Etch 1.1.0-incubating (LOCAL-0) / c 1.1.0-incubating (LOCAL-0)
//   Fri Aug 28 15:58:20 CEST 2009
// This file is automatically created and should not be edited!
#set($i = $intf.name().name().toLowerCase()) 
/*
 * $helper.getMainFileNameH($intf, $mc)
 * $suffix exe main() private header
 */

#ifndef $helper.getMainFileNameH($intf, $mc).toUpperCase().replace(".","_")
#define $helper.getMainFileNameH($intf, $mc).toUpperCase().replace(".","_")

\#include "etch_runtime.h"
\#include "$helper.getHelperFileNameH($intf)"
\#include "$helper.getImplFileNameH($intf, $suffix)"
\#include "$helper.getRemoteFileNameH($intf, $helper.getDirectionName($helper.getRemoteDirection($mc)))"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * ${i}_listener_start(pplistener, uri, waitupms)
 * Start the listener at the given uri, waiting waitupms microseconds for listener startup.
 * The created listener is saved at address pointed to by pplistener.
 */
extern etch_status_t ${i}_listener_start(i_sessionlistener** pplistener, wchar_t* uri, int waitupms);

/*
 * ${i}_listener_stop(plistener, waitupms)
 * Stop the listener given by plistener, waiting waitupms microseconds to stop.
 */
extern etch_status_t ${i}_listener_stop(i_sessionlistener* plistener, int waitupms);

#ifdef __cplusplus
} //extern "C"
#endif

#endif /* $helper.getMainFileNameH($intf, $mc).toUpperCase() */
