// This file automatically generated by:
//   Apache Etch 1.1.0-incubating (LOCAL-0) / java 1.1.0-incubating (LOCAL-0)
//   Fri Jul 16 12:01:27 CEST 2010
// This file is automatically created and should not be edited!

package etch.cbinding.test;
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */



/**
 * Call to message translator for helloworldServer.
 */
@SuppressWarnings("unused")
public final class RemotehelloworldServer extends Remotehelloworld implements helloworldServer
{
	/**
	 * Constructs the RemotehelloworldServer.
	 *
	 * @param svc
	 * @param vf
	 */
	public RemotehelloworldServer( org.apache.etch.bindings.java.support.DeliveryService svc, org.apache.etch.bindings.java.msg.ValueFactory vf )
	{
		super( svc, vf );
	}

	/**
	 * {@link _Async} class instance used to hide asynchronous message
	 * implementation. Use this to invoke the asynchronous message
	 * implementations.
	 */
	public final _Async _async = new _Async();

	/**
	 * {@link _Async} class instance used to hide asynchronous message
	 * implementation. This is here for backwards compatibility only, use
	 * {@link #_async} instead.
	 * @deprecated
	 */
	@Deprecated
	public final _Async _inner = _async;

	public final String say_hello(
		etch.cbinding.test.helloworld.user to_whom
	)
	throws
		etch.cbinding.test.helloworld.UserUnknownException
	{
		return
		_async._end_say_hello( _async._begin_say_hello(
			to_whom
		) );
	}

	/**
	 * Asynchronous implementation of service methods.
	 */
	public final class _Async extends Remotehelloworld._Async
	{

		/**
		 * Begins a call to say_hello.
		 *
		 * @return mailbox used to retrieve the result using _end_say_hello.
		 * @see RemotehelloworldServer#say_hello
		 * @see #_end_say_hello
		 */
		public final org.apache.etch.bindings.java.support.Mailbox _begin_say_hello(
			etch.cbinding.test.helloworld.user to_whom
		)
		{
			org.apache.etch.bindings.java.msg.Message _msg = _newMessage( ValueFactoryhelloworld._mt_etch_cbinding_test_helloworld_say_hello );
			_msg.put( ValueFactoryhelloworld._mf_to_whom, to_whom );
			return _begincall( _msg );
		}
		
		/**
		 * Ends a call to say_hello.
		 *
		 * @param mb mailbox returned by _begin_say_hello.
		 *
		 * @see RemotehelloworldServer#say_hello
		 * @see #_begin_say_hello
		 */
		public final String _end_say_hello( org.apache.etch.bindings.java.support.Mailbox mb )
			throws
				etch.cbinding.test.helloworld.UserUnknownException
		{
			try
			{
				return
					(String)
						_endcall( mb,
							ValueFactoryhelloworld._mt_etch_cbinding_test_helloworld__result_say_hello );
			}
			catch ( Exception e )
			{
				if (e instanceof etch.cbinding.test.helloworld.UserUnknownException)
					throw (etch.cbinding.test.helloworld.UserUnknownException) e;
				if (e instanceof RuntimeException) throw (RuntimeException) e;
				throw new RuntimeException( "unexpected exception from peer: "+e, e );
			}
		}

		// Mixin Methods
	}
}
