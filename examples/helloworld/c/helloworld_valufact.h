/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */


// This file automatically generated by:
//   Apache Etch 1.1.0-incubating (LOCAL-0) / c 1.1.0-incubating (LOCAL-0)
//   Fri Aug 28 15:58:20 CEST 2009
// This file is automatically created and should not be edited!

 
/*
 * helloworld_valufact.h
 * helloworld implementation of value factory
 */

#ifndef HELLOWORLD_VALUFACT_H
#define HELLOWORLD_VALUFACT_H

#include "etch_default_value_factory.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef default_value_factory helloworld_valufact;

extern unsigned short CLASSID_HELLOWORLD_VALUFACT_IMPL;

unsigned short CLASSID_HELLOWORLD_USER_SERIALIZER;
unsigned short CLASSID_HELLOWORLD_USERUNKNOWNEXCEPTION_SERIALIZER;


/**
 * helloworld_valufact_statics
 */
typedef struct helloworld_valufact_statics
{
    class_to_type_map*  _etch_helloworld_valufact_c2tmap;
    vf_idname_map*      _etch_helloworld_valufact_typemap;

    etch_type* _mt_helloworld_say_hello;
    etch_type* _mt_helloworld__result_say_hello;

    etch_type* _mt_helloworld_user;
    etch_type* _mt_helloworld_UserUnknownException;

	
    etch_field* _mf_helloworld_id;
    etch_field* _mf_helloworld_name;
    etch_field* _mf_helloworld_mes;
    etch_field* _mf_helloworld_to_whom;

    struct etch_serializer* serializer_user;
    struct etch_serializer* serializer_UserUnknownException;

    wchar_t* str_helloworld_id;
    wchar_t* str_helloworld_name;
    wchar_t* str_helloworld_mes;
    wchar_t* str_helloworld_to_whom;

    wchar_t* str_helloworld_say_hello;
    wchar_t* str_helloworld__result_say_hello;
    wchar_t* str_helloworld_user;
    wchar_t* str_helloworld_UserUnknownException;

} helloworld_valufact_statics;

/**
 * helloworld_valufact_impl
 * helloworld extension of default value factory
 */
typedef struct helloworld_valufact_impl
{
    etch_object object;    
    	
} helloworld_valufact_impl;

helloworld_valufact* new_helloworld_valufact();
helloworld_valufact_statics* helloworld_valufact_get_static();

#ifdef __cplusplus
} //extern "C"
#endif

#endif 

