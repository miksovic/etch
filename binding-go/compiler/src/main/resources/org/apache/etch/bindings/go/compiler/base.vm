## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements. See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership. The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License. You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied. See the License for the
## specific language governing permissions and limitations
## under the License.
// This file automatically generated by:
//   $version
//   $now
// This file is automatically created and should not be edited!
// Re-implement these methods by overriding them in Impl$intf.name()$suffix.
#set($i = $intf.name())
#set($intfname = "$i$suffix")
#set($clname = "Base$intfname")
#if ($helper.isServer($mc))
#set($peer = "client")
#else
#set($peer = "server")
#end

package $helper.getPackageName($intf)

type ${intfname}_base struct {
#if ($helper.isServer($mc)) 
    TheClient *Remote${i}Client
#end
}

func (base *${intfname}_base) SessionQuery(obj interface{}) interface{} {
	return nil
}

func (base *${intfname}_base) SessionControl(ctrl interface{}, value interface{}) interface{} {
	return nil
}

func (base *${intfname}_base) SessionNotify(obj interface{}) {
	
}

#foreach ($mthd in $intf.iterator())
#if ($mthd.isMsgDir($mc) || $mthd.isMsgDirBoth())
#if (!$mthd.isHidden())
#if(!$methodList.contains($mthd.name().name()))
#set ( $addMethodListStatus = $methodList.add($mthd.name().name()) )

#set ( $methodName="func (base *${intfname}_base) $mthd.name() (" )
#set( $sep = "" )
#foreach( $param in $mthd.iterator() )
#set ( $methodName = $methodName + "$param.name() $sep$helper.getTypeName( $param.type() )")
#set( $sep = ", " )
#end
#set ( $methodName = $methodName + ") $helper.getTypeName( $mthd.type() )" )
$methodName {
#if ($mthd.type() != "")
    		  panic("not implemented")
#end
}
#end
#end
#end
#end


